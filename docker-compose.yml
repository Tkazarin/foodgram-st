version: '3.3'

services:
  db:
    image: postgres:15.0-alpine
    environment:
      POSTGRES_DB: foodgram-backend
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d foodgram-backend" ]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    image: tkazarin/foodgram-backend:latest
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - static:/app/all_static
      - ./media/:/app/media/
    entrypoint: [ "/app/start.sh" ]
    expose:
      - 8000
    command: [ "gunicorn", "--bind", "0.0.0.0:8000", "foodgram_back.wsgi" ]
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/" ]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: tkazarin/foodgram-frontend:latest
    volumes:
      - frontend_build:/app/build

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - frontend_build:/usr/share/nginx/html
      - static:/app/all_static
      - ./media/:/app/media/
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend


volumes:
  postgres_data:
  static:
  media:
  frontend_build: